package name.antonsmirnov.notes.controller.grpc

import io.grpc.stub.StreamObserver
import name.antonsmirnov.notes.usecase.AddNote

// DTOs and AddNoteControllerImplBase are generated by gradle plugin from IMLs
// (see src/main/proto files)
class AddNoteController(
    private val useCase: AddNote
) : AddNoteControllerGrpc.AddNoteControllerImplBase() {

    override fun add(requestRpc: AddNoteRequest?, responseObserver: StreamObserver<AddNoteResponse>?) {
        // map gRPC dto to canonical dto
        val body: String? = if (requestRpc!!.hasBody()) requestRpc.body.value
                            else null
        val request = AddNote.Request(requestRpc.title, body)

        // execute interactor
        val response = useCase.execute(request)

        // map canonical dto back to gRPC dto and return
        val responseGrpc = AddNoteResponse
                .newBuilder()
                .setId(response.id)
                .build()

        responseObserver!!.onNext(responseGrpc)
        responseObserver.onCompleted()
    }

}