plugins {
    id 'kotlin-multiplatform'
    id('org.jetbrains.kotlin.native.cocoapods')
}

kotlin {
    jvm()
    iosX64() // iOS simulator

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                api project(':domain')
            }
        }
        commonIos {

        }
        iosX64Main {
            dependsOn commonIos
        }
    }

    // All exceptions in Kotlin are not checked, but in Swift they are checked.
    // So we need @Throws annotation for iOS compatibility to generate swift signatures with `.. throws -> ..`
    // This requires @ExperimentalMultiplatform annotation in all methods with @Throws.
    // In order to prevent adding @ExperimentalMultiplatform every here and there we can use compiler option:
    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += '-Xuse-experimental=kotlin.ExperimentalMultiplatform'
            }
        }
    }
}

version = "$rootProject.module_version"

kotlin {
    cocoapods {
        summary = "App API of NotesServerApp"
        homepage = "https://github.com/4ntoine/NotesServerApp"
    }
}